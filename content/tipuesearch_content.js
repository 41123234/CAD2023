var tipuesearch = {"pages": [{'title': 'About', 'text': '個人倉儲： https://github.com/41123234/cad2023 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': '網路設定', 'text': '由於電腦輔助設計室某部分套件, 在 IPv4 網路環境下會被防毒軟體偵測到封包異常而封閉網路, 因此以下將 IPv4 網路關閉, 僅使用 IPv6, 並透過雙網路協定支援的代理主機設定, 以便與僅支援 IPv4 的網路主機連線。 \n \n \n \n 先從 這裡 確認你的班級序號 \n \n \n 下載 網路設定檔案 \n \n \n 同時下載 SCITE 編輯器: \xa0 wscite.7z \n \n \n 編輯修改 .ps1 中的 IPv6 固定位址, 放入自己的固定 IPv6 address \n \n \n', 'tags': '', 'url': '網路設定.html'}, {'title': '操作影片', 'text': '透過同組組員指導，並錄製。 \n 網路設定.mp4 \n', 'tags': '', 'url': '操作影片.html'}, {'title': '操作步驟', 'text': '步驟一  從mde .tw中，找到home選單底下的reval。   \n \n    步驟二  往後翻找至 "有關網路設定 "，並下載網路設定檔。   \n \n        步驟三  下載後並解壓逤。   \n \n    步驟四  將資料夾中的 "1 _disable _ipv4 "從 "SciTE "打開。   \n \n    步驟五  修改內文的 " 2 0 0 1 : 2 8 8 : 6 0 0 4 : 1 7 : 2 0 2 3 : c a d b : :序號 "  序號至 https://mde.tw/cadnote/content/links.html \xa0查看並修改。 \n \n', 'tags': '', 'url': '操作步驟.html'}, {'title': 'Wink', 'text': '學習如何利用 \xa0 Wink \xa0 製作電腦操作流程影片, 並將影片放入個人與分組網頁中. \n 首先使用者必須了解 \xa0 Wink \xa0 製作影片的功能與 \xa0 ShareX \xa0 相同, 都是依賴 \xa0 ffmpeg.exe . 意即使用 \xa0 Wink \xa0 之前必須在 Preferences 中先行設定 ffmpeg.exe 所在位置, 否則無法對所建立的專案轉為 mp4 檔案. \n 另外, 若擷取關鍵影格的電腦螢幕解析度大於 1008 x 630, 通常建立將影格 resize, 以方便使用者在手機上觀看影片. \n 利用 Wink 建立操作影片的步驟: \n \n 設定 ffmpeg.exe 所在位置, 若使用隨身碟中的可攜程式系統, 可將 ffmpeg.exe 放在 data 目錄中, 並以 wink_ffmpeg.reg 進行設定, 也可將 Wink 的啟動與 start_ipv6.bat 進行整合. \n 開啟 Wink 新專案. \n 每按下一次 Pause 鍵, 可擷取操作過程中的畫面影格 (利用 Zoomit 放大所要強調的操作內容, 並以紅線框列). \n 操作錄製結束後, 從右下方的 Tray 中, 以滑鼠左鍵點選, 在 Wink 圖示中, 以滑鼠右鍵帶出 Finish Capture 按鍵, 點選後即可回到 Wink 專案區. \n 在每一頁影格中加入註解說明 TextBox 之前, 先利用 Project - Resize All Frames 將影格縮小至 1008 x630. \n 完成註解說明後, 可以逐一移動各頁面滑鼠游標位置, 並決定各頁面影片播放時的停留時間. \n 最後以 Render 按鈕進行轉檔, 並利用 View Rendered Output 檢視所建立的操作影片. \n \n', 'tags': '', 'url': 'Wink.html'}, {'title': 'Wink操作影片', 'text': '\n', 'tags': '', 'url': 'Wink操作影片.html'}, {'title': 'W12', 'text': '', 'tags': '', 'url': 'W12.html'}, {'title': '座位表', 'text': '以下為參照 https://mde.tw/cadnote/downloads/2b_w12_seat.txt 及已知同學位置。 \n \n \n \n 41123220 \n 41123231 \n 41123215 \n \n 41123207 \n \n 411232212 \n 41123238 \n 41123237 \n \n \n \n 41123221 \n 41123208 \n 41123201 \n 41123234 \n 411232209 \n 41123230 \n 41123233 \n 41123205 \n \n \n \n 41136124 \n 41123226 \n 41123206 \n \n 41123227 \n 41123203 \n 41123202 \n 41123222 \n \n \n 41123214 \n 41123224 \n 41123210 \n 41123240 \n 41123218 \n \n \n 41123239 \n 41123245 \n \n \n 41123235 \n 41123229 \n 41123236 \n 41123251 \n 41123250 \n 41123246 \n 41123241 \n 41123243 \n 41123249 \n \n \n \n 41123211 \n 41123247 \n 41132222 \n 41123232 \n \n 41123217 \n 41123204 \n 41123216 \n \n \n \n \n 41136103 \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '座位表.html'}, {'title': '未知名單', 'text': '41123219 \n 41123228 41123244 \n 41123248 \n 41136126 \n 41136131 \n', 'tags': '', 'url': '未知名單.html'}, {'title': 'W13-14', 'text': '有關磁力吸引的鋼球循環運動系統, 請參考 這個影片 . \xa0 或者透過課程檔案下載密碼觀看 這個影片 . \n 根據 這個網站 宣稱是此一 Perpetual Motion Simulator 的原始創作者. \n 同時參考\xa0 A perpetual motion machine powered by electromagnetism.pdf \xa0 (需要下載密碼) \n 電腦輔助設計與實習課程的任務一即可根據此一裝置的設計, 先採用電腦輔助設計軟體, 繪製系統所需的 3D 零組件, 然後轉為 STL 格式, import 進入 CoppeliaSim, 接著根據影片說明, 利用近接感測器(例如: \xa0 電感式近接開關 , \xa0 Inductive proximity sensor ) 控制電磁鐵開關, 設法透過磁力吸引讓鋼球具有足夠動能返回圓形平台. \n 有關利用 Arduino 控制卡與相關電路設計產生電磁力控制的模擬, 請參考 \xa0 PICSimLab \xa0 頁面中的說明. \n 一旦完成 CoppeliaSim 與 Arduino 電路設計等機電資系統整合模擬, 就可以進一步利用 3D printer 列印出所需零組件, 結合實體電路設計完成此一系統的虛實整合. \n 機電模擬系統: \n 下載支援 IPv6 網路協定版本 \xa0 CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z \xa0 (需要下載密碼) \n CoppeliaSim 使用者手冊 , \xa0 CoppeliaSim 4.3.0 使用手冊網站 \n 模擬磁力的 討論 , \xa0 1 , \xa0 2 \n Force Control Modeling \n simpleMagnetDemo.ttt \n 模擬原理: \n Perpetual Motion Simulator 主要的電路設計包含右側軌道下方的電磁鐵, 通電後可產生一定大小的磁吸力, 當圓形鐵球循著軌道由平台孔洞往下滾動, 經過軌道下方近接感測器 (Proximity sensor) 時 (距離 3mm-5mm), 透過感應, 控制電路將會短暫啟動電磁鐵 (10 miliseconds), 促使圓形鐵球加速滾動, 其磁力大小約略與圓形鐵球距離的平方成反比 ( Computational Electromagnetics , \xa0 磁場模擬 ). \n 因此圓形鐵球除了從平台高度落下時, 將位能轉換為動能外, 與軌道滾動磨擦以及空氣阻力所損耗的運動能, 將額外由電磁鐵開關間所得到的磁力吸引能量進行加速, 以便取得足夠的動能在脫離軌道末端後, 重新回到圓形平台. \n', 'tags': '', 'url': 'W13-14.html'}, {'title': 'CoppeliaSim操作', 'text': '經由反覆觀看影片後，自行操作。 CoppeliaSim操作影片 \n 步驟一\u3000將 project1_w14_simple.7z 內的"project1_w14_simple.ttt"匯入"CoppleliaSim"。 \n \n \n 步驟二\u3000 將"Protable_2023_fall"資料夾中的 "SciTE "打開。 \n \n \n \n 步驟三\u3000 將資料夾中的 "project1_w14_simple.py "匯入 "SciTE "打開。 \n \n 步驟四\u3000展開 "SciTE "中的"tools"，點選"GO"。 \n \n \n 成果 \n \n', 'tags': '', 'url': 'CoppeliaSim操作.html'}, {'title': '分組作業', 'text': '有關磁力吸引的鋼球循環運動系統, 請參考 這個影片 . \xa0 或者透過課程檔案下載密碼觀看 這個影片 . \n 根據 這個網站 宣稱是此一 Perpetual Motion Simulator 的原始創作者. \n 同時參考\xa0 A perpetual motion machine powered by electromagnetism.pdf \xa0 (需要下載密碼) \n 電腦輔助設計與實習課程的任務一即可根據此一裝置的設計, 先採用電腦輔助設計軟體, 繪製系統所需的 3D 零組件, 然後轉為 STL 格式, import 進入 CoppeliaSim, 接著根據影片說明, 利用近接感測器(例如: \xa0 電感式近接開關 , \xa0 Inductive proximity sensor ) 控制電磁鐵開關, 設法透過磁力吸引讓鋼球具有足夠動能返回圓形平台. \n 有關利用 Arduino 控制卡與相關電路設計產生電磁力控制的模擬, 請參考 \xa0 PICSimLab \xa0 頁面中的說明. \n 一旦完成 CoppeliaSim 與 Arduino 電路設計等機電資系統整合模擬, 就可以進一步利用 3D printer 列印出所需零組件, 結合實體電路設計完成此一系統的虛實整合. \n 機電模擬系統: \n 下載支援 IPv6 網路協定版本 \xa0 CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z \xa0 (需要下載密碼) \n CoppeliaSim 使用者手冊 , \xa0 CoppeliaSim 4.3.0 使用手冊網站 \n 模擬磁力的 討論 , \xa0 1 , \xa0 2 \n Force Control Modeling \n simpleMagnetDemo.ttt \n 模擬原理: \n Perpetual Motion Simulator 主要的電路設計包含右側軌道下方的電磁鐵, 通電後可產生一定大小的磁吸力, 當圓形鐵球循著軌道由平台孔洞往下滾動, 經過軌道下方近接感測器 (Proximity sensor) 時 (距離 3mm-5mm), 透過感應, 控制電路將會短暫啟動電磁鐵 (10 miliseconds), 促使圓形鐵球加速滾動, 其磁力大小約略與圓形鐵球距離的平方成反比 ( Computational Electromagnetics , \xa0 磁場模擬 ). \n 因此圓形鐵球除了從平台高度落下時, 將位能轉換為動能外, 與軌道滾動磨擦以及空氣阻力所損耗的運動能, 將額外由電磁鐵開關間所得到的磁力吸引能量進行加速, 以便取得足夠的動能在脫離軌道末端後, 重新回到圓形平台. \n \n (image from \xa0 here ) \n 電磁力未啟動下的 perpetual motion simulator CoppeliaSim 場景模擬: \n \n Images and part files in Onshape \xa0 (STL file import into CoppeliaSim 尺寸由 mm 放大10 倍至 cm, 且 z 軸向上, 場景中圓球直徑為 12.825 cm, 平台圓孔直徑為 20 cm) \n \n Perpetual Motion Simulator in Onshape , 轉入 CoppeliaSim 後放大 10 倍, 且 z 軸向上之模擬場景, 下載 \xa0 perpetual motion simulator stage2.7z \xa0 (需要下載密碼) \n 有關如何在 Onshape 繪製零組件, 轉出 STL 檔案, 轉入 CoppeliaSim 並進行組件 divide and group, 請參考這個 教學影片 . \n', 'tags': '', 'url': '分組作業.html'}, {'title': '磁力吸引-影片', 'text': '繪圖過程 \n 使用SolidWorks 2023繪製 \n', 'tags': '', 'url': '磁力吸引-影片.html'}, {'title': '磁力吸引-步驟', 'text': '步驟1 繪製底座草圖，並伸長 \n \n  editor2 結束  \n \n \n 步驟2 繪製底座支撐桿插槽 \n \n \n \n 步驟3 繪製圓盤草圖，並旋轉掃出 \n \n \n \n 步驟4\xa0 繪製圓盤支撐桿插槽 \n \n \n 步驟5 繪製支撐桿 \n \n \n 步驟6 先偏移一平面，接著繪製軌道草圖，並掃出，最後將此特徵镜射 \n \n \n \n \n 步驟7 繪製軌道支撐桿 \n \n', 'tags': '', 'url': '磁力吸引-步驟.html'}, {'title': '課堂考試', 'text': '', 'tags': '', 'url': '課堂考試.html'}, {'title': '影片', 'text': '繪圖過程 \n 使用SolidWorks 2022繪製 \n', 'tags': '', 'url': '影片.html'}, {'title': '步驟', 'text': '步驟1\xa0 繪製底座草圖，並伸長 \n \n \n \n 步驟2 去除軌道放置位子料 \n \n \n 步驟3 繪製軌道草圖，並分別掃出 \n \n \n \n 步驟4 繪製軌道間支撐 \n \n \n', 'tags': '', 'url': '步驟.html'}, {'title': '自我評分', 'text': '自評分數:60 \n 已將所有課程影片觀看完畢 \n A: 是否按照進度明確標示倉儲的改版歷程\xa0\xa0已完成 \n B: 是否根據 \xa0 IPv4 與 IPv6 \xa0 網路環境設定進行作法討論\xa0\xa0已完成 \n C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作\xa0 Replit已完成 \n D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考\xa0\xa0已完成 \n E: 是否使用所分配的 CAD 套件完成 專案一零組件繪圖 , 並提供零組件下載\xa0\xa0已完成 \n F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim\xa0 \xa0已 完成 \n G: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬\xa0 \xa0已 完成 \n H: 是否實際操作 \xa0 Triangle 軌道系統 的鋼球永動模擬\xa0 \xa0 未完成 \n I: 是否完成 W15 的平面雙 U 迴路上的 鋼球永動系統繪圖、轉檔與系統模擬\xa0 \xa0 未完成 \n J: 是否使用所分配的 CAD 套件完成 專案二 1D 平台零組件繪圖 , 並提供零組件下載\xa0 \xa0 未完成 \n K: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬\xa0 \xa0 未完成 \n L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 \xa0 PID 控制理論 進行資料收集與 ChatGPT 對答\xa0 未完成 \n \n \n', 'tags': '', 'url': '自我評分.html'}]};